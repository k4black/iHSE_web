name: deploy
# Build and Publish Front End Website

on:
    push:
        branches:
            - release

jobs:
    deploying:
        runs-on: [ubuntu-latest]
        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: release

            # MINIMIZATION STEPS
            -   name: Use Node.js 12.x
                uses: actions/setup-node@v1
                with:
                    node-version: 12.x

            -   name: CSS minimization
                working-directory: ./frontend
                run: |
                    npm install
                    npm install uglifycss -g

                    ls -la styles/
                    ls -la components/styles/

                    for fileName in `ls ./styles/*.css` `ls ./components/styles/*.css`; do
                        uglifycss $fileName --output $fileName
                    done

                    ls -la styles/
                    ls -la components/styles/

            -   name: JS minimization
                working-directory: ./frontend
                run: |
                    npm install
                    npm install uglify-es -g

                    ls -la scripts/
                    ls -la components/scripts/

                    for fileName in `ls ./scripts/*.js` `ls ./components/scripts/*.js`; do
                       uglifyjs $fileName --output $fileName
                    done

                    ls -la scripts/
                    ls -la components/scripts/

            -   name: HTML minimization
                working-directory: ./frontend
                run: |
                    npm install
                    npm install html-minifier -g

                    ls -la .
                    ls -la components/

                    # TODO --remove-comments

                    for fileName in `ls ./*.html` `ls ./components/*.html`; do
                       html-minifier $fileName --output $fileName --collapse-whitespace  --remove-optional-tags --remove-redundant-attributes --remove-script-type-attributes --remove-tag-whitespace --use-short-doctype --minify-css true --minify-js true
                    done

                    ls -la .
                    ls -la components/

            # FTP DEPLOY STEPS
            -   name: List output files
                run: ls

#            -   name: FTP-Deploy-Action
#                uses: SamKirkland/FTP-Deploy-Action@2.0.0
#                env:
#                    FTP_SERVER: ihse.tk
#                    FTP_USERNAME: ${{ secrets.FTP_USER }}
#                    FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
#                    METHOD: ftp
#                    LOCAL_DIR: .
#                    ARGS: --delete

            # SSH DEPLOY STEPS
            -   name: SCP-Deploy-Action
                uses: appleboy/scp-action@master
                with:
                    host: ihse.tk
                    username: ${{ secrets.SSH_USER }}
                    key: ${{ secrets.SSH_KEY }}
                    port: 22
                    source: "."
                    target: "/var/app"
                    rm: true
#                    overwrite: true

            # SSH DEPLOY STEPS
            -   name: Running setup bash script
                uses: appleboy/ssh-action@master
                with:
                    host: ihse.tk
                    username: ${{ secrets.SSH_USER }}
                    key: ${{ secrets.SSH_KEY }}
                    port: 22
                    script: |
                        echo "Runing /var/app/setup.sh"
                        sudo chmod +x /var/app/setup.sh
                        sudo /var/app/setup.sh
              
