version: '3.7'

services:
    # Nginx server for static frontend 
    nginx:        
        build:
            context: ./nginx/
            dockerfile: nginx_local.dockerfile
        container_name: nginx_docker_local
        restart: unless-stopped
        ports:
          - 80:80
          - 443:443
        volumes:
          - ../frontend/:/var/app/frontend/
          - ../local_run/log/nginx:/var/log/nginx/
        depends_on:
          - uwsgi

    # uWSGI server for backend 
    uwsgi:
        build:
            context: ./uwsgi/
            dockerfile: uwsgi.dockerfile
        container_name: uwsgi_docker
        restart: unless-stopped
        volumes:
          - ../backend/:/var/app/backend/
          - ../local_run/conf/:/var/conf/
          - ../local_run/log/uwsgi:/var/log/uwsgi
        depends_on:
            - database

    # PostgreSQL server for backend
    # TODO
    database:
        image: postgres:12.1
#        build:
#            context: ./postgres
#            dockerfile: postgres.dockerfile
        container_name: database_docker
        restart: unless-stopped
        ports:
          - 5431:5432
        volumes:
          - ../local_run/pgdata:/var/lib/postgresql/data/pgdata
        environment:
            POSTGRES_DB: ihse
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: root
            PGDATA: /var/lib/postgresql/data/pgdata


    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
        container_name: elasticsearch_docker
        environment:
            - discovery.type=single-node
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - 9200:9200
        # volumes:
        #     - ./kibana.yml:/usr/share/kibana/config/kibana.yml
        restart: unless-stopped

    kibana:
        image: docker.elastic.co/kibana/kibana:7.6.1
        container_name: kibana_docker
        ports:
            - 5601:5601
        depends_on:
            - elasticsearch

#    logstash:
#        image: docker.elastic.co/logstash/logstash:7.6.1
#        container_name:  logstash_docker
#        restart: unless-stopped
##        log_opt:
##            max-size: "10m"
##            max-file: "10"
##        command: logstash -f /config-dir/logstash.conf
#        ports:
#            - 5044:5044
#        links:
#            - elasticsearch

    filebeat:
        image: docker.elastic.co/beats/filebeat:7.6.1
        container_name: filebeat_docker
#        user: root
        volumes:
#            - ./config/beats/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
            - ../local_run/log/nginx:/var/log/nginx/

#        command: filebeat -e -E output.elasticsearch.username=elastic -E output.elasticsearch.password=${ES_PASSWORD} -strict.perms=false
        restart: unless-stopped
        depends_on:
            #wait for the these services to come up. This ensures the logs are available and ES exists for indexing
            - elasticsearch
            - nginx
#            - logstash